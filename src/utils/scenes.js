const {question, deleteConversations} = require("./helpers");
const {configRead, configEdit} = require("./config");
const api = require("./api");

async function settingsScene(rl) {
    const useExistingDataAnswer = await question(rl, "\n[üîß] –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ config.json? (Y - –î–∞ / N - –ù–µ—Ç)\n[‚ö°Ô∏è]  ")
    switch (true) {
        case /^(–Ω–µ—Ç|no|–Ω|n)/i.test(useExistingDataAnswer):
            await configScene(rl);
            await modeScene(rl);
            break;
        case /^(–¥–∞|yes|–¥|y)/i.test(useExistingDataAnswer):
            await modeScene(rl);
            break;
        default:
            await settingsScene(rl);
            break;
    }
}

async function modeScene(rl) {
    const countAnswer = await question(rl, "\n[‚öôÔ∏è] –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã\n(1) - –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞\n(2) - –¶–∏–∫–ª–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–∏–∞–ª–æ–≥–æ–≤\n[‚ö°Ô∏è]  ")
    const configConversationsDelete = configRead().conversations.delete
    if (!(/^(1|2)/ig.test(countAnswer))) {
        await modeScene(rl);
        return
    }
    await deleteConversations(
        configConversationsDelete.count,
        configConversationsDelete.parallelRequests,
        configConversationsDelete.delay.min,
        configConversationsDelete.delay.max,
        countAnswer === '2'
    );
}

async function configScene(rl) {
    const tokenAnswer = await question(rl, "\n[üîí] –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ\n[‚ö°Ô∏è]  ")
    await configEdit('token', tokenAnswer)
    api.options.token = tokenAnswer
    const countAnswer = await question(rl, "\n[üìù] –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–¥–∞–ª–∏—Ç—å\n(üçÄ) - –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1000\n[‚ö°Ô∏è]  ")
    await configEdit('conversations.delete.count',
        isNaN(Number(countAnswer)) || !countAnswer
            ? 1000 : Number(countAnswer)
    )

    const parallelRequestsAnswer = await question(rl, "\n[üöÄ] –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤\n(üçÄ) - –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 10\n(üçÄ) - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 25\n[‚ö°Ô∏è]  ")
    await configEdit('conversations.delete.parallelRequests',
        isNaN(Number(parallelRequestsAnswer)) || !parallelRequestsAnswer || Number(parallelRequestsAnswer) > 25
            ? 10 : Number(parallelRequestsAnswer)
    )

    const minDelayAnswer = await question(rl, "\n[‚è≥] –í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É —É–¥–∞–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–í –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)\n(üçÄ) - –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 500\n[‚ö°Ô∏è]  ")
    await configEdit('conversations.delete.delay.min',
        isNaN(Number(minDelayAnswer)) || !minDelayAnswer
            ? 500 : Number(minDelayAnswer)
    )

    const maxDelayAnswer = await question(rl, "\n[‚è≥] –í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É —É–¥–∞–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–í –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)\n(üçÄ) - –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1000\n[‚ö°Ô∏è]  ")
    await configEdit('conversations.delete.delay.max',
        isNaN(Number(maxDelayAnswer)) || !maxDelayAnswer
            ? 1000 : Number(maxDelayAnswer)
    )
}

module.exports = {
    settingsScene
}